(let operator (import-module 'operator'))

(let + operator::add)
(let - operator::sub)
(let pos operator::pos)
(let neg operator::neg)
(let * operator::mul)
(let / operator::truediv)
(let // operator::floordiv)
(let ** operator::pow)
(let % operator::mod)

(let get (lambda [obj item] (obj::__getitem__ item)))
(let set (lambda [obj item value] (obj::__setitem__ item value)))

(let first (lambda [coll] (get coll 0)))
(let second (lambda [coll] (get coll 1)))
(let last (lambda [coll] (get coll -1)))
(let rest (lambda [coll] (get coll (slice 1, None))))

(let < operator::lt)
(let <= operator::le)
(let > operator::gt)
(let >= operator::ge)
(let = operator::eq)
(let is operator::is_)
(let is-not operator::is_not)
(let not operator::not_)
(let contains operator::contains)

(del operator)