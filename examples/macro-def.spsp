(let def 
    (macro [name args body]
        (expr! 
            (let 
                (inline! name)
                (lambda (inline! args) (inline! body))))))


(def fib
    [n]
    (if (<= n 2)
        1
        (+ (fib (- n 1)) (fib (- n 2)))))


(def main
    []
    (do
        (print (fib 1))
        (print (fib 2))
        (print (fib 3))
        (print (fib 4))
        (print (fib 5))
        (print (fib 6))))


(main)


